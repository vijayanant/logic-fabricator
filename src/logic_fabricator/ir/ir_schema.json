{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Logic Fabricator Intermediate Representation Schema",
  "description": "Top-level schema for parsing natural language input into a structured IR object.",
  "type": "object",
  "properties": {
    "input_type": {
      "type": "string",
      "enum": ["rule", "statement", "question"],
      "description": "The type of the natural language input."
    },
    "data": {
      "oneOf": [
        { "$ref": "#/definitions/IRRule" },
        { "$ref": "#/definitions/IRStatement" }
      ],
      "description": "The structured IR data, which depends on the input_type."
    }
  },
  "required": ["input_type", "data"],
  "definitions": {
    "IRCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["LEAF", "AND", "OR", "EXISTS", "FORALL", "COUNT", "NONE"]
        },
        "children": {
          "type": "array",
          "items": { "$ref": "#/definitions/IRCondition" }
        },
        "subject": { "type": "string" },
        "verb": { "type": "string" },
        "object": { "type": ["string", "number", "boolean", "array"] },
        "negated": { "type": "boolean", "default": false },
        "operator": { "type": "string", "description": "For COUNT type, this holds the comparison operator (e.g., '>', '<=')." },
        "value": { "type": "number", "description": "For COUNT type, this holds the number to compare against." }
      },
      "required": ["type"],
      "description": "A unified condition structure. The 'type' field determines its specific properties."
    },
    "IRBranchCondition": {
      "type": "object",
      "properties": {
        "operator": {"type": "string", "enum": ["AND", "OR"]},
        "children": {
          "type": "array",
          "items": { "$ref": "#/definitions/IRCondition" },
          "description": "An array of sub-conditions that are combined by the operator."
        }
      },
      "required": ["operator", "children"]
    },
    "IRStatement": {
      "type": "object",
      "properties": {
        "type": {"type": "string", "const": "statement", "description": "Discriminator for IRStatement."},
        "subject": {"type": "string", "description": "The subject of the statement."},
        "verb": {"type": "string", "description": "The main verb of the statement."},
        "object": {"type": "string", "description": "The object of the statement."},
        "negated": {"type": "boolean", "default": false, "description": "True if the statement is negated."},
        "modifiers": {"type": "array", "items": {"type": "string"}, "default": [], "description": "Any adverbs or adjectives modifying the statement."}
      },
      "required": ["type", "subject", "verb", "object"]
    },
    "IREffect": {
      "type": "object",
      "properties": {
        "type": {"type": "string", "const": "effect", "description": "Discriminator for IREffect."},
        "target_world_state_key": {"type": "string", "description": "The key in the world state to modify (e.g., \"population\", \"light\")."},
        "effect_operation": {"type": "string", "description": "The operation to perform (e.g., \"increment\", \"set\", \"decrement\")."},
        "effect_value": {"type": ["string", "number", "boolean", "object", "array"], "description": "The value for the operation."}
      },
      "required": ["type", "target_world_state_key", "effect_operation", "effect_value"]
    },
    "IRRule": {
      "type": "object",
      "properties": {
        "rule_type": {"type": "string", "enum": ["standard", "effect"], "description": "The type of rule."},
        "condition": { "$ref": "#/definitions/IRCondition", "description": "The condition of the rule."}, 
        "consequence": {
          "oneOf": [
            { "$ref": "#/definitions/IRStatement" },
            { "$ref": "#/definitions/IREffect" }
          ],
          "discriminator": {
            "propertyName": "type"
          },
          "description": "The consequence of the rule, either a statement or an effect."
        }
      },
      "required": ["rule_type", "condition", "consequence"]
    }
  }
}